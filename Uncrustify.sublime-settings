{
  "uncrustify_executable" : "uncrustify",

  // Specifies the config file for uncrustify when not set UNCRUSTIFY_CONFIG.
  // For example:
  //    "uncrustify_config" : "C:/UTILS/Devel/uncrustify/cfg/defaults.cfg"
  // NOTE:
  //    You can copy the example config files in Uncrustify/etc (Source) or Uncrustify/cfg (Win32
  //    pre-built) and modify as your version.
  // "uncrustify_config" : "",

  // Overrides the default config (aka "uncrustify_config") when document matches one of below languages.
  // NOTE:
  //    Don't use other language keywords which uncrustify don't supported.
  // "uncrustify_config_by_lang" :
  // [
  //   // For example:
  //   // All Java files use java.cfg and all Objective C files use obj.cfg, others use default...
  //   // { "JAVA" : "C:/cfg/java.cfg" },
  //   // { "OC" : "C:/cfg/obj.cfg" }
  //   { "C" : "" },
  //   { "CPP" : "" }, //"cimproved" ???
  //   { "D" : "" },
  //   { "CS" : "" },      // this is C#
  //   { "JAVA" : "" },
  //   { "PAWN" : "" },
  //   { "OC" : "" },      // this is Objective C
  //   { "OC+" : "" },     // this is Objective C++
  //   { "VALA" : "" },
  //   { "SQL" : "" },
  //   { "ECMA" : "" }
  // ],

  // Overrides the "uncrustify_config" and "uncrustify_config_by_lang" when path name of document matches
  // one of below strings/patterns.
  // NOTE:
  //    1. The path name uses a forward slash character ("/") as its directory separator.
  //    2. Comparing with the absolute path name of document not only the file name.
  //    3. Please use a good string to avoid the incident match.
  //    4. You can use "Open Uncrustify Config - Matches Current Document" in Uncrustify's Package Settings
  //       to test the matching.
  // "uncrustify_config_by_filter" :
  // [
  //   // For example:
  //   // All files in below folders use the custom configs, others use its language or default configs...
  //   // { "D:/project/abc/libfoo" : "C:/cfg/foo.cfg" },
  //   // { "D:/project/abc/src" : "C:/cfg/abc.cfg" }
  // ],

  // When uses "uncrustify_config_by_filter", the filtering rule is
  //    0: Literal text, check if the string appeared inside as a subset. This is default.
  //       For example:
  //       { "abc/src/" : "C:/cfg/abc.cfg" }
  //    1: Unix wildcards, can use the special pattern characters *,?,[seq],[!seq]...
  //       For example:
  //       { "*abc/src/*" : "C:/cfg/abc.cfg" }
  //    2: Regular expression, er... yah regular expression.
  //       For example:
  //       { ".*abc/src/.*" : "C:/cfg/abc.cfg" }
  // NOTE:
  //    1. When uses rule 1 or 2, if the string without pattern characters means to compare to EQUAL!
  //       (not a subset string as rule 0)
  //    2. All above rules are case sensitive!
  //       (but rule 1 and 2 can be extended to case insensitive pattern)
  // "uncrustify_filtering_rule" : 0
}
